const prompt = require("prompt-sync")({ sigint: true });
//BIENVENIDA/OS!!!
//Soy Martina Gandolfo, tengo 19 a√±os y soy de Argentina.
//Estoy muy emocionada de presentarles mi primer trabajo integrador del curso de JavaScript.
//Este es mi trabajo integrador, espero que cumpla con todas las pautas y que sea lo que esperan ver en esta etapa del curso.
//Intente usar todo lo que pidieron y adem√°s agregarle un poco de mi estilo personal,para que sea m√°s estetico.
// Espero que lo disfruten tanto como yo disfrute hacerlo,tuve compicaciones pero no me rend√≠ y lo logr√© terminar.
//respet√© cada paso asi era m√©s facil de seguir y leer el codigo.
console.log("‚ãÜÔΩ° Ôæü‚òÅÔ∏éÔΩ° ‚ãÜÔΩ° Ôæü‚òæ ÔæüÔΩ° ‚ãÜ Bienvenidos a esta biblioteca virtual ‚ãÜÔΩ° Ôæü‚òÅÔ∏éÔΩ° ‚ãÜÔΩ° Ôæü‚òæ ÔæüÔΩ° ‚ãÜ");
// Integrador de Biblioteca virtual
// Este c√≥digo implementa un sistema de gesti√≥n de biblioteca con funcionalidades para manejar libros y usuarios.
// Punto 1.a) Crear el array de libros
const libros = [
  { id: 1, titulo: "Cien a√±os de soledad", autor: "Gabriel Garc√≠a M√°rquez", a√±o: 1967, g√©nero: "Realismo m√°gico", disponible: true },
  { id: 2, titulo: "1984", autor: "George Orwell", a√±o: 1949, g√©nero: "Distop√≠a", disponible: true },
  { id: 3, titulo: "Rayuela", autor: "Julio Cort√°zar", a√±o: 1963, g√©nero: "Experimental", disponible: false },
  { id: 4, titulo: "Ficciones", autor: "Jorge Luis Borges", a√±o: 1944, g√©nero: "Fantas√≠a", disponible: true },
  { id: 5, titulo: "Orgullo y prejuicio", autor: "Jane Austen", a√±o: 1813, g√©nero: "Romance", disponible: true },
  { id: 6, titulo: "El principito", autor: "Antoine de Saint-Exup√©ry", a√±o: 1943, g√©nero: "F√°bula", disponible: true },
  { id: 7, titulo: "Don Quijote", autor: "Miguel de Cervantes", a√±o: 1605, g√©nero: "Novela", disponible: true },
  { id: 8, titulo: "El t√∫nel", autor: "Ernesto Sabato", a√±o: 1948, g√©nero: "Psicol√≥gico", disponible: false },
  { id: 9, titulo: "Fahrenheit 451", autor: "Ray Bradbury", a√±o: 1953, g√©nero: "Ciencia ficci√≥n", disponible: true },
  { id: 10, titulo: "Crimen y castigo", autor: "Fi√≥dor Dostoyevski", a√±o: 1866, g√©nero: "Filos√≥fico", disponible: true }
];
// Punto 1.b) Crear el array de usuarios
const usuarios = [
  { id: 1, nombre: "Malena", email: "malena9@gmail.com", librosPrestados: [3] },
  { id: 2, nombre: "Lucas", email: "lucass@gmail.com", librosPrestados: [8] },
  { id: 3, nombre: "Facundo", email: "facuku@gmail.com", librosPrestados: [] },
  { id: 4, nombre: "Erik", email: "eriking@gmail.com", librosPrestados: [2, 6] },
  { id: 5, nombre: "Ruth", email: "rutyty@gmail.com", librosPrestados: [] }
];
// Punto 2.a) Agregar un nuevo libro
function agregarLibro(id, titulo, autor, a√±o, g√©nero) {
  libros.push({ id, titulo, autor, a√±o, g√©nero, disponible: true });
  console.log(`Libro "${titulo}" agregado exitosamente.`);
}

// Punto 2.b) Buscar libro por t√≠tulo, autor o g√©nero
function buscarLibro(criterio, valor) {
  const criteriosValidos = ["titulo", "autor", "genero"];

  if (!criteriosValidos.includes(criterio)) {
    console.log("Criterio inv√°lido. Usa 'titulo', 'autor' o 'genero'.");
    return;
  }

  const resultados = [];

  for (let i = 0; i < libros.length; i++) {
    const campoLibro = libros[i][criterio];
    if (campoLibro && campoLibro.toLowerCase().includes(valor.toLowerCase())) {
      resultados.push(libros[i]);
    }
  }

  if (resultados.length > 0) {
    console.log("Libros encontrados:");
    resultados.forEach(libro => console.log(libro));
  } else {
    console.log("No se encontraron libros con ese criterio!!");
  }
}

// Punto 2.c) Ordenar libros por t√≠tulo o a√±o usando bubble sort
function ordenarLibros(criterio) {
  const copia = [...libros];

  for (let i = 0; i < copia.length - 1; i++) {
    for (let j = 0; j < copia.length - i - 1; j++) {
      if (copia[j][criterio] > copia[j + 1][criterio]) {
        [copia[j], copia[j + 1]] = [copia[j + 1], copia[j]];
      }
    }
  }

  console.log(`Libros ordenados por ${criterio}:`);
  console.log(copia);
}
// Punto 2.d) Eliminar libro por id
function borrarLibro(id) {
  const index = libros.findIndex(libro => libro.id === id);
  if (index !== -1) {
    const eliminado = libros.splice(index, 1)[0];
    console.log(`Libro "${eliminado.titulo}" eliminado.`);
  } else {
    console.log("Libro no encontrado!!");
  }
}
// Punto 3.a) Registrar nuevo usuario
function registrarUsuario(nombre, email) {
  const nuevoId = usuarios.length + 1;
  usuarios.push({ id: nuevoId, nombre, email: email.toLowerCase(), librosPrestados: [] });
  console.log(`Usuario ${nombre} registrado con √©xito.`);
}
// Punto 3.b) Mostrar todos los usuarios
function mostrarTodosLosUsuarios() {
  return usuarios;
}
// Punto 3.c) Buscar usuario por email
function buscarUsuario(email) {
  return usuarios.find(u => u.email.toLowerCase() === email.toLowerCase()) || "Usuario no encontrado!!";
}
// Punto 3.d) Borrar usuario por nombre y email
function borrarUsuario(nombre, email) {
  const index = usuarios.findIndex(u => u.nombre === nombre && u.email.toLowerCase() === email.toLowerCase());
  if (index !== -1) {
    const eliminado = usuarios.splice(index, 1)[0];
    console.log(`Usuario ${eliminado.nombre} eliminado.`);
  } else {
    console.log("Usuario no encontrado.");
  }
}
// Punto 4.a) Prestar libro a usuario
function prestarLibro(idLibro, idUsuario) {
  const libro = libros.find(l => l.id === idLibro);
  const usuario = usuarios.find(u => u.id === idUsuario);

  if (!libro || !libro.disponible) return "Libro no disponible o no encontrado.";
  if (!usuario) return "Usuario no encontrado.";

  libro.disponible = false;
  usuario.librosPrestados.push(idLibro);
  return `Libro "${libro.titulo}" prestado a ${usuario.nombre}.`;
}
// Punto 4.b) Devolver libro
function devolverLibro(idLibro, idUsuario) {
  const libro = libros.find(l => l.id === idLibro);
  const usuario = usuarios.find(u => u.id === idUsuario);

  if (!libro || !usuario) return "Libro o usuario no encontrado.";

  const index = usuario.librosPrestados.indexOf(idLibro);
  if (index !== -1) {
    usuario.librosPrestados.splice(index, 1);
    libro.disponible = true;
    return `Libro "${libro.titulo}" devuelto por ${usuario.nombre}.`;
  } else {
    return "El usuario no tiene este libro prestado.";
  }
}
// Punto 5.a) Generar reporte de libros
function generarReporteLibros() {
  const totalLibros = libros.length;

  const librosPrestados = libros.filter(libro => !libro.disponible).length;

  const cantidadPorGenero = libros.reduce((acc, libro) => {
    acc[libro.g√©nero] = (acc[libro.g√©nero] || 0) + 1;
    return acc;
  }, {});

  const libroMasAntiguo = libros.reduce((a, b) => (a.a√±o < b.a√±o ? a : b));
  const libroMasNuevo = libros.reduce((a, b) => (a.a√±o > b.a√±o ? a : b));

  console.log("üìò Reporte de Libros:");
  console.log("‚û° Total de libros:", totalLibros);
  console.log("‚û° Libros prestados:", librosPrestados);
  console.log("‚û° Cantidad por g√©nero:", cantidadPorGenero);
  console.log("‚û° Libro m√°s antiguo:", libroMasAntiguo.titulo, `(${libroMasAntiguo.a√±o})`);
  console.log("‚û° Libro m√°s nuevo:", libroMasNuevo.titulo, `(${libroMasNuevo.a√±o})`);
}
// Punto 6.a) Libros con t√≠tulos que contienen m√°s de una palabra solo con letras
function librosConPalabrasEnTitulo() {
  const regexSoloLetras = /^[a-zA-Z√°√©√≠√≥√∫√Å√â√ç√ì√ö√±√ë\s]+$/;

  const librosFiltrados = libros.filter(libro => {
    const palabras = libro.titulo.trim().split(/\s+/);
    return palabras.length > 1 && regexSoloLetras.test(libro.titulo);
  });

  const titulos = librosFiltrados.map(libro => libro.titulo);

  console.log("üìó T√≠tulos con m√°s de una palabra (solo letras):", titulos);
  return titulos;
}
// Punto 7.a) Estad√≠sticas de a√±os de publicaci√≥n
function calcularEstadisticas() {
  const a√±os = libros.map(libro => libro.a√±o);

  const promedio = Math.round(a√±os.reduce((a, b) => a + b, 0) / a√±os.length);

  const frecuencias = {};
  let maxFrecuencia = 0;
  let a√±oMasFrecuente;

  for (let a√±o of a√±os) {
    frecuencias[a√±o] = (frecuencias[a√±o] || 0) + 1;
    if (frecuencias[a√±o] > maxFrecuencia) {
      maxFrecuencia = frecuencias[a√±o];
      a√±oMasFrecuente = a√±o;
    }
  }

  const diferencia = Math.max(...a√±os) - Math.min(...a√±os);

  console.log(" Estad√≠sticas:");
  console.log("‚û° Promedio de a√±os:", promedio);
  console.log("‚û° A√±o m√°s frecuente:", a√±oMasFrecuente);
  console.log("‚û° Diferencia entre m√°s nuevo y m√°s antiguo:", diferencia);
}
// Punto 8.a) Normalizar t√≠tulos, autores y emails
function normalizarDatos() {
  libros.forEach(libro => {
    libro.titulo = libro.titulo.toUpperCase();
    libro.autor = libro.autor.trim();
  });

  usuarios.forEach(usuario => {
    usuario.email = usuario.email.toLowerCase();
  });

  console.log("‚úî Datos normalizados correctamente.");
}
function alerta(mensaje) {
    console.log(mensaje);
    }
// Punto 9: Men√∫ principal (requiere entorno con prompt)
function menuPrincipal() {
  let opcion;

  do {
    opcion = prompt(`
ÔΩ°¬∞‚ú© ‚ãÜÔΩ°‚ÄßÀö ö Men√∫ principal …ûÀö‚ÄßÔΩ°‚ãÜ ÔΩ°¬∞‚ú©
1.   ‚ï∞‚îà‚û§ Agregar libro
2.   ‚ï∞‚îà‚û§ Buscar libro
3.   ‚ï∞‚îà‚û§ Ordenar libros
4.   ‚ï∞‚îà‚û§ Borrar libro
5.   ‚ï∞‚îà‚û§ Registrar usuario
6.   ‚ï∞‚îà‚û§ Mostrar usuarios
7.   ‚ï∞‚îà‚û§ Buscar usuario
8.   ‚ï∞‚îà‚û§ Borrar usuario
9.   ‚ï∞‚îà‚û§ Prestar libro
10.  ‚ï∞‚îà‚û§ Devolver libro
11.  ‚ï∞‚îà‚û§ Generar reporte
12.  ‚ï∞‚îà‚û§ Libros con varias palabras
13.  ‚ï∞‚îà‚û§ Estad√≠sticas
14.  ‚ï∞‚îà‚û§ Normalizar datos
15.  ‚ï∞‚îà‚û§ Salir.‚Ä¢.‚Ä¢.‚Ä¢.
‚òÜ Eleg√≠ una opci√≥n ‚òÜ :
`);

    switch (opcion) {
      case "1":
        const id = libros.length + 1;
        const titulo = prompt("T√≠tulo: ");
        const autor = prompt("Autor: ");
        const a√±o = parseInt(prompt("A√±o: "));
        const genero = prompt("G√©nero: ");
        agregarLibro(id, titulo, autor, a√±o, genero);
        break;

      case "2":
        const crit = prompt(" ‚ûî Buscar por: titulo / autor / g√©nero: ").toLowerCase();
        
        console.log(buscarLibro(crit));
        break;

      case "3":
        const criterio = prompt("‚ûî Ordenar por: titulo / a√±o: ");
        ordenarLibros(criterio);
        break;

      case "4":
        const idBorrar = parseInt(prompt(" ‚ûî ID del libro a borrar: "));
        borrarLibro(idBorrar);
        break;

      case "5":
        const nombre = prompt(" ‚ûî Nombre del usuario: ");
        const email = prompt(" ‚ûî Email del usuario: ");
        registrarUsuario(nombre, email);
        break;

      case "6":
        console.log(mostrarTodosLosUsuarios());
        break;

      case "7":
        const emailBuscado = prompt("‚ûî Email del usuario a buscar: ");
        console.log(buscarUsuario(emailBuscado));
        break;

      case "8":
        const nom = prompt("‚ûî Nombre del usuario: ");
        const em = prompt("‚ûî Email del usuario: ");
        borrarUsuario(nom, em);
        break;

      case "9":
        const idLibro = parseInt(prompt("‚ûî ID del libro a prestar: "));
        const idUsuario = parseInt(prompt("‚ûî ID del usuario: "));
        console.log(prestarLibro(idLibro, idUsuario));
        break;

      case "10":
        const idLibroDev = parseInt(prompt("‚ûî ID del libro a devolver: "));
        const idUsuarioDev = parseInt(prompt("‚ûî ID del usuario: "));
        console.log(devolverLibro(idLibroDev, idUsuarioDev));
        break;

      case "11":
        generarReporteLibros();
        break;

      case "12":
        librosConPalabrasEnTitulo();
        break;

      case "13":
        calcularEstadisticas();
        break;

      case "14":
        normalizarDatos();
        break;

        case "15":
        console.log(" ‚ãÜÔΩ° Ôæü‚òÅÔ∏éÔΩ° ‚ãÜÔΩ° Ôæü‚òæ ÔæüÔΩ° ‚ãÜ Saliendo del sistema ‚ãÜÔΩ° Ôæü‚òÅÔ∏éÔΩ° ‚ãÜÔΩ° Ôæü‚òæ ÔæüÔΩ° ‚ãÜ" );
        break;
    }
  } while (opcion !== "15");
}
// Llamar a la funci√≥n para iniciar el men√∫
menuPrincipal();
